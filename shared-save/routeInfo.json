{"path":"shared-save","templateID":1,"sharedPropsHashes":{"apiList":"Z22ICdU"},"localProps":{"reference":{"title":"共有セーブを利用する","slug":"shared-save","description":"RPGアツマール内で動作する特定のサーバーセーブデータを取得するAPIです","order":26,"experimental":true,"contents":"<h2>概要</h2>\n<p>指定ユーザーの特定キー（<code>Atsumaru Shared</code>）のサーバーセーブデータを取得できる機能です。<br>このセーブデータのことを「共有セーブ」と呼びます。</p>\n<h3>なにができるのか</h3>\n<p>指定ユーザーの共有セーブを取得できます。この機能だけでは誰からデータを取得すればいいのかわかりませんが、他APIと組み合わせることにより、非同期通信型のゲームが制作可能になります。<br>例えば、<a href=\"/user\">ユーザー情報API</a>で、そのゲームを最近プレイしたユーザーがわかるので、そのユーザーの共有セーブに保存されたデータ（例えばアイテムなど）を取得することで、疑似的なすれ違い通信のようなゲームが作成できます。</p>\n<h4>利用想定／利用例</h4>\n<p>この機能は、以下のような使い方を想定しています。</p>\n<ul>\n<li>選択したアバターと一言メッセージを保存し、表示する広場</li>\n<li>作成したモンスターキャラクターのデータ共有</li>\n</ul>\n<p>例えば、次のサンプルゲームではこの機能を利用し、選択したアバターと一言メッセージを共有セーブに保存しています。</p>\n<ul>\n<li><a href=\"https://game.nicovideo.jp/atsumaru/games/gm9291\">【ゲームAPIサンプル】AsyncProfile（ユーザー情報取得API・共有セーブAPI）</a></li>\n</ul>\n<p>また、こちらのサンプルゲームでは、作成したスライムの情報を共有セーブに保存し、ほかのユーザーの作成したスライムと戦わせています。（バトルの結果は、<a href=\"/signal\">ユーザーシグナル</a>で送信しています）</p>\n<ul>\n<li><a href=\"https://game.nicovideo.jp/atsumaru/games/gm9294\">【ゲームAPIサンプル】スライムバトラー（ユーザーシグナルAPI・共有セーブAPI）</a></li>\n</ul>\n<h2>機能詳細</h2>\n<ul>\n<li>共有対象のデータは、<code>Atsumaru Shared</code> というkeyで保存されたサーバーセーブデータです。<ul>\n<li>keyについては<a href=\"/storage\">こちら</a>を参照ください。</li>\n<li>共有対象にしたくないデータは、このkeyを使わないようにご注意ください。</li>\n</ul>\n</li>\n<li>本機能でできるのは共有セーブの <strong>取得のみ</strong> で、共有元への書き込みはできません。</li>\n<li>一度に取得できるデータは100件までで、それ以上のデータを一度に取得しようとするとエラーになります。</li>\n</ul>\n<h3>共有セーブの取得条件</h3>\n<ul>\n<li>取得できるのは同一ゲームあるいは同一作者のゲーム且つ、<a href=\"/common/interplayer\">プレイヤー間通信の有効化</a>しているユーザー間のみです。</li>\n<li>存在しないユーザーや、共有セーブが無いユーザー、プレイヤー間通信が有効化されていないユーザーのデータを取得しようとした場合、そのユーザーの分だけデータが取得できません。</li>\n<li>ゲーム作者の場合は、ゲームの公開状態によらず、共有セーブを取得できます。</li>\n<li>作者以外は公開状態のゲームでのみ共有セーブを取得できます。限定公開・非公開状態のゲームの共有セーブを取得できません。</li>\n<li>自分自身の共有セーブはプレイヤー間通信の有効化をしていなくてもセーブを取得できます。</li>\n<li>未ログインユーザーは共有セーブをサーバーに保存できないため、取得のみとなります。</li>\n</ul>\n<h2>利用方法</h2>\n<p>共有セーブ機能は次の方法で利用できます。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">場所</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">ゲームAPI</td>\n<td align=\"left\">以下の「APIでの利用方法」を参考に、直接APIを呼び出してください</td>\n</tr>\n</tbody></table>\n<h3>APIでの利用方法</h3>\n<h4>共有セーブの取得</h4>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.experimental.storage.getSharedItems(userIds: number[], gameId: number &amp;#124; null)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\">指定したユーザの <code>Atsumaru Shared</code> というキーで保存したセーブデータを取得する。</td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\"><ul><li><code>userIds[]</code> : ユーザー情報を取得したいユーザーのニコニコユーザーIDの配列を自然数で、最大100件まで指定します。</li><li><code>gameId</code> : 現在プレイ中のゲーム以外からセーブデータを取得する場合、ゲームのIDを自然数で指定します。</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;{ [userId: number]: string }&gt;</code></td>\n</tr>\n<tr>\n<td align=\"left\">リリース日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n<tr>\n<td align=\"left\">更新日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n</tbody></table>\n<ul>\n<li><code>userIds</code> で指定したユーザーのセーブデータユーザーのデータを取得できます。<ul>\n<li>指定したユーザーのうち、取得先のゲームで <a href=\"/common/interplayer\">プレイヤー間通信の有効化</a> をしているユーザーのセーブデータのみ取得できます。</li>\n<li>自分自身のデータは対象ゲームで有効化していなくてもセーブを取得できます</li>\n</ul>\n</li>\n<li>第二引数の <code>gameId</code> を指定することで、別のゲームの共有セーブを取得できます。<ul>\n<li>セーブを取得しようとするゲームと、同じ作者のゲームのidを指定された場合のみ、取得可能です。</li>\n<li>作者以外は取得しようとするゲームが公開状態の場合のみ、共有セーブを取得できます。</li>\n<li>作者は非公開状態のゲームの共有セーブも取得できます。</li>\n</ul>\n</li>\n</ul>\n<h5>戻り値の例</h5>\n<pre><code class=\"lang-js\">// window.RPGAtsumaru.experimental.storage.getSharedItems([123, 456, 789]) を実行\n{\n  123: &quot;ユーザー1234の共有データ&quot;,\n  456: &quot;ユーザー5678の共有データ&quot;\n  // 789 のユーザーが取得先のゲームで「プレイヤー間通信の有効化」されていない場合は結果に含まれません！\n}</code></pre>\n"},"title":"共有セーブを利用する","path":"/shared-save"}}
